figlet.defaults({fontPath:"https://unpkg.com/figlet@1.4.0/fonts/"}),figlet.preloadFonts(["Standard","Slant"],ready),null===localStorage.getItem("num")&&localStorage.setItem("num","0"),null===localStorage.getItem("imgn")&&localStorage.setItem("imgn","0");var ver="v1.0";let lis,cnt,dt=new Date;function ready(){$("#term").terminal({help:function(){let e=`${Prism.highlight("A GNU bash replica to help you manage notes, version 1.0-release. \nThese shell commands are defined internally.  Type 'help' to see this list.\nUse 'info bash' to find out more about the shell in general.\n",Prism.languages.bash,"bash")}`;this.echo($("<div></div>").html(e).contents()),this.echo(),this.echo($("<center><font color='#ffff00'>nmd</font> [list] [create] [remove] : helps you add, remove or list notes<br><font color='pink'>img</font> [list] [create] [remove] : helps you add, remove or list images</center>"))},nmd:function(e){"list"===e.toLocaleLowerCase()?(lis=list())!=[]?lis.forEach(this.echo):this.echo("Nothing to show"):"create"===e.toLocaleLowerCase()?this.read("Title : ").then(e=>{this.read("Content : ").then(t=>{dt=new Date;let o=Number(localStorage.getItem("num")),n=JSON.stringify({T:e,C:t,TimeStamp:dt.toLocaleString()});localStorage.setItem(String(o),n),localStorage.setItem("num",String(o+1))})}):"remove"===e.toLocaleLowerCase()?(lis=list())!=[]?(this.echo("Available option : "),list().forEach(this.echo),this.read("Enter index for the Note to remove : ").then(e=>{e=e?Number(e):void 0,cnt=Number(localStorage.getItem("num")),0<e&&e<=cnt&&(localStorage.removeItem(String(e-1)),localStorage.setItem("num",String(cnt-1)),this.echo("Note removed"))})):this.echo("Nothing to remove"):this.echo(`[[;red;]bash]: nmd: [[;orange;]${e}]: invalid option`)},img:function(e){if("list"===e.toLocaleLowerCase()){img(this)||this.echo("Nothing to show")}else if("create"===e.toLocaleLowerCase())this.echo($('<center><label for="file" class="img-upload">Image Upload</label>\n            <input type="file" accept="image/*" id="file" required></center>\n            <script>\n            img_();\n            <\/script>'));else if("remove"===e.toLocaleLowerCase()){this.echo("Available option : ");let e=img(this);e?this.read("Enter index for the Note to remove : ").then(t=>{if(t=t?Number(t):void 0,cnt=Number(localStorage.getItem("imgn")),console.log(t),console.log(e),console.log(0<t&&t<=cnt),0<t&&t<=cnt){let e=Number(localStorage.getItem("imgn"));localStorage.removeItem("img"+String(Number(t)-1)),localStorage.setItem("imgn",String(e-1))}}):this.echo("Nothing to remove")}else this.echo(`[[;red;]bash]: nmd: [[;orange;]${e}]: invalid option`)}},{greetings:function(){return render("#Notes for <DEV>","Standard",this.cols())+`\nWelcome to the first CLI based Note Manager right at your browser. [[;rgba(255,255,255,0.99);]Version ${ver}]\nType help to know more.`},prompt:"root@nm-dev:~# ",height:.9*innerHeight,width:.7*innerWidth,clear:!1,completion:!0})}function render(e,t,o){return figlet.textSync(e,{font:t||"Standard",width:term?o:80,whitespaceBreak:!0})}function list(){let e=[];for(let t=0;t<Number(localStorage.getItem("num"));t++)try{let o=JSON.parse(localStorage.getItem(t)),n=o.T,r=o.C,i=o.TimeStamp,a=`Note-${t+1} : {'Title' :  '${n}' ,\n'Content' : '${r}' ,\n'TimeStamp' : '${i||"TimeStamp not found"}'}`,l=`${Prism.highlight(a,Prism.languages.javascript,"javascript")}`,m=$("<div/>").html(l).contents();e.push(m)}catch{}return e}function img(e){if(Number(localStorage.getItem("imgn"))>0){for(let t=0;t<Number(localStorage.getItem("imgn"));t++)try{let o=JSON.parse(localStorage.getItem("img"+t)),n=o.Image,r=o.TimeStamp,i=$("<img class='image' src="+n+"></img>");e.echo(`Img-${t+1} : {'Image' :`),e.echo(i),e.echo(`,\n'TimeStamp' : '${r||"TimeStamp not found"}'}`)}catch{}return!0}return!1}$.terminal.syntax("bash"),$.terminal.new_formatter(function(e){if(/help/g.test(e))return e.replace(/help/g,"[[;blue;]help]")}),$.terminal.new_formatter(function(e){if(/nmd/g.test(e))return e.replace(/nmd/g,"[[;yellow;]nmd]")}),$.terminal.new_formatter(function(e){if(/img/g.test(e))return e.replace(/img/g,"[[;pink;]img]")});